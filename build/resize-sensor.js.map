{"version":3,"sources":["../src/resize-sensor.jsx"],"names":["supportsAttachEvent","animStart","document","probablyDoingSSR","ResizeSensor","dimensions","width","height","onElementResize","bind","e","self","expand","expandChild","contract","props","setOnResize","attachEvent","addEventListener","i","length","resetTriggers","detachEvent","removeEventListener","onResize","type","resizeRAF","window","cancelAnimationFrame","requestAnimationFrame","animationName","currentDimensions","getDimensions","isResized","offsetWidth","offsetHeight","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","Component"],"mappings":"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","file":"resize-sensor.js","sourcesContent":["/**\r\n * @license MIT\r\n * @copyright Kirill Shestakov 2017\r\n * @see https://github.com/guitarino/resize-sensor--react/\r\n * ----\r\n * Rework of https://github.com/procurios/ResizeSensor\r\n */\r\n\r\nimport React from 'react';\r\nimport './raf';\r\n\r\nvar\r\n  // this is for ie9\r\n  supportsAttachEvent,\r\n  // animation start events with varied prefixes\r\n  animStart = [\r\n    'webkitAnimationStart',\r\n    'animationstart',\r\n    'oAnimationStart',\r\n    'MSAnimationStart'\r\n  ]\r\n;\r\n\r\ntry {\r\n  supportsAttachEvent = ('attachEvent' in document);\r\n}\r\ncatch(probablyDoingSSR) {\r\n  supportsAttachEvent = false;\r\n}\r\n\r\n// essentially, this is the idea:\r\n//\r\n//   we have contraction and expansion triggers,\r\n//   each of them have children\r\n//\r\n//   for contraction:\r\n//     the child is 2x bigger than container,\r\n//     and it's always scrolled to the bottom right,\r\n//     so, when contracted, the bottom right scroll\r\n//     position changes, and the 'scroll' event gets called\r\n//\r\n//   for expansion:\r\n//     the child is slightly bigger than container,\r\n//     and it's always scrolled to the bottom right,\r\n//     so, when the container expands, the scrollbar\r\n//     disappears and changes the child's scroll position\r\n//\r\nexport default class ResizeSensor extends React.Component {\r\n  constructor() {\r\n    super();\r\n    // when invisible, <ResizeSensor/> size is 0x0\r\n    this.dimensions = {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    // binding (needed for requestAnimationFrame callback)\r\n    this.onElementResize = this.onElementResize.bind(this);\r\n  }\r\n\r\n  // as you can see, there's triggers that \"listen\" to expansion\r\n  // and triggers that \"listen\" to contraction\r\n  render() {\r\n    return (\r\n      <div className='resize-sensor-react' ref={(e) => {this.self = e}}>\r\n        <div className=\"resize-sensor-react__expand\" ref={(e) => {this.expand = e}}>\r\n          <div className=\"resize-sensor-react__expand-child\" ref={(e) => {this.expandChild = e}}></div>\r\n        </div>\r\n        <div className=\"resize-sensor-react__contract\" ref={(e) => {this.contract = e}}>\r\n          <div className=\"resize-sensor-react__contract-child\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // never update element, just render once\r\n  shouldComponentUpdate() {\r\n    return false;\r\n  }\r\n  \r\n  // overriding onResize if props are updated\r\n  componentWillReceiveProps(props) {\r\n    this.setOnResize(props);\r\n  }\r\n\r\n  // when component is mounted, we just need to attach handlers\r\n  // scroll - needed for detecting resize\r\n  // animation start - needed detecting visibility (we need to\r\n  //   trigger initial update once the element becomes visible\r\n  //   because the size might have changed)\r\n  //\r\n  // Note: using addEventListener's ability to trigger `handleEvent`\r\n  //       so that we don't have to deal with binding\r\n  componentDidMount() {\r\n    this.setOnResize(this.props);\r\n    // ie9 only\r\n    if (supportsAttachEvent) {\r\n      this.self.attachEvent('onresize', this.onElementResize);\r\n    }\r\n    // other browsers\r\n    else {\r\n      this.self.addEventListener('scroll', this, true);\r\n      for (var i=0; i<animStart.length; i++) {\r\n        this.self.addEventListener(animStart[i], this);\r\n      }\r\n      // Initial value reset of all triggers\r\n      this.resetTriggers();\r\n    }\r\n  }\r\n\r\n  // When element is unmounted, need to remove all\r\n  componentWillUnmount() {\r\n    // ie9 only\r\n    if (supportsAttachEvent) {\r\n      this.self.detachEvent('onresize', this.onElementResize);\r\n    }\r\n    // other browsers\r\n    else {\r\n      for (var i=0; i<animStart.length; i++) {\r\n        this.self.removeEventListener(animStart[i], this);\r\n      }\r\n      this.self.removeEventListener('scroll', this, true);\r\n    }\r\n  }\r\n\r\n  // if there's no 'onResize' prop, then we'll fall back\r\n  // to this onResize, which will do nothing\r\n  onResize() { }\r\n\r\n  setOnResize(props) {\r\n    if ('onResize' in props) {\r\n      this.onResize = props.onResize;\r\n    }\r\n  }\r\n\r\n  // using addEventListener's handleEvent ability\r\n  // so that we don't have to deal with binding\r\n  handleEvent(e) {\r\n    // on scroll, debounce-ish\r\n    if (e.type === 'scroll') {\r\n      this.resetTriggers();\r\n      if (this.resizeRAF) {\r\n        window.cancelAnimationFrame(\r\n          this.resizeRAF\r\n        );\r\n      }\r\n      this.resizeRAF = window.requestAnimationFrame(\r\n        this.onElementResize\r\n      );\r\n    }\r\n    // when element becomes visible, reset the trigger sizes;\r\n    // the scroll will be triggered if sizes changed\r\n    else {\r\n      if (e.animationName === 'resize-sensor-react-animation') {\r\n        this.resetTriggers();\r\n      }\r\n    }\r\n  }\r\n\r\n  // check if actually resized, call the callback\r\n  onElementResize() {\r\n    var currentDimensions = this.getDimensions();\r\n    if (this.isResized(currentDimensions)) {\r\n      this.dimensions.width = currentDimensions.width;\r\n      this.dimensions.height = currentDimensions.height;\r\n      this.onResize(this.dimensions.width, this.dimensions.height);\r\n    }\r\n  }\r\n\r\n  // just checking if either dimension changed\r\n  isResized(currentDimensions) {\r\n    return (\r\n      currentDimensions.width !== this.dimensions.width ||\r\n      currentDimensions.height !== this.dimensions.height\r\n    );\r\n  }\r\n\r\n  // returning current dimensions of the resize sensor\r\n  getDimensions() {\r\n    return {\r\n      width: this.self.offsetWidth,\r\n      height: this.self.offsetHeight\r\n    };\r\n  }\r\n\r\n  // this implements the idea behind resize sensor\r\n  resetTriggers() {\r\n    this.contract.scrollLeft = this.contract.scrollWidth;\r\n    this.contract.scrollTop = this.contract.scrollHeight;\r\n    this.expandChild.style.width = (this.expand.offsetWidth + 1) + 'px';\r\n    this.expandChild.style.height = (this.expand.offsetHeight + 1) + 'px';\r\n    this.expand.scrollLeft = this.expand.scrollWidth;\r\n    this.expand.scrollTop = this.expand.scrollHeight;\r\n  }\r\n}"]}